
PUSHAD # get values from registers, to reinstate them later, saving program state
PUSHFD # take note of espe address here as well
MOV EAX, 00403000        # Save start of encoding address in EDX
XOR BYTE PTR DS:[EAX],0F  # XOR the contents od EDX with xor key - 0F.
INC EAX                   # Increase EAX.
CMP EAX, 00403200         # Have we reached the end enc. address? #00403000 + 200 = 403200
JLE SHORT 004018E7        # If not, jump back to XOR command.
SUB ESP, 24 # 0022FFC4 â€“ 0022FFA0 = 4 - correcting changes in esp
POPFD # returning values to registers, to reinstate them, preserving program state
POPAD # returning values to registers, to reinstate them, preserving program state
PUSH EBP # replacing first instruction we overwrote with the jump
MOV EBP, ESP  # replacing first instruction we overwrote with the jump
SUB ESP, 8  # replacing first instruction we overwrote with the jump
JMP 00401226  # jumping back - place breakpoint here :)